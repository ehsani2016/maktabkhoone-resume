{"version":3,"sources":["Components/Theme.js","Components/NavBar.js","Components/ArrowDropDownUp.js","Sections/Section.js","Sections/TitleSection.js","Sections/AboutSection.js","Sections/SkillsSection.js","App.js","serviceWorker.js","index.js"],"names":["Theme","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","ThemeArrCurrent","themeArr","length","r","Math","floor","random","indexOf","push","MyRandom","section_first","document","getElementsByClassName","section_second","section_third","classList","remove","concat","add","setState","_this2","react_default","a","createElement","style","float","href","onClick","ThemChanger","class","Component","NavBar","modules","activeClass","to","spy","smooth","offset","duration","onSetActive","handleSetActive","Components_Theme","ArrowDropDownUp","className","fontSize","icon","defaultProps","Section","name","elementName","children","Components_ArrowDropDownUp","elementTo","AboutSection","Sections_Section","data","title","subtitle","keys","links","map","key","react_social_icons","url","Sections","item","content","src","image","alt","App","lib_default","Components_NavBar","Sections_TitleSection","Sections_AboutSection","Sections_SkillsSection","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.afbeda50.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport \"../Css/Theme.css\"\r\n\r\nclass Theme extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ThemeArrCurrent: [],\r\n        }\r\n        this.themeArr = [];\r\n    }\r\n\r\n\r\n    MyRandom() {\r\n        this.themeArr = [];\r\n        while (this.themeArr.length < 3) {\r\n            let r = Math.floor(Math.random() * 6) + 1;\r\n            if (this.themeArr.indexOf(r) === -1) this.themeArr.push(r);\r\n        }\r\n    }\r\n\r\n    ThemChanger() {\r\n\r\n        this.MyRandom()\r\n\r\n\r\n        // Get Section Elements\r\n        let section_first = document.getElementsByClassName(\"Section-first\");\r\n        let section_second = document.getElementsByClassName(\"Section-second\");\r\n        let section_third = document.getElementsByClassName(\"Section-third\");\r\n        //\r\n\r\n        // Remove current Theme\r\n        section_first[0].classList.remove(`theme${this.state.ThemeArrCurrent[0]}`);\r\n        section_second[0].classList.remove(`theme${this.state.ThemeArrCurrent[1]}`);\r\n        section_third[0].classList.remove(`theme${this.state.ThemeArrCurrent[2]}`);\r\n        //\r\n\r\n        // Add Theme Section1\r\n        section_first[0].classList.add(`theme${this.themeArr[0]}`);\r\n        //\r\n\r\n        // Add Theme Section2\r\n        section_second[0].classList.add(`theme${this.themeArr[1]}`);\r\n        //\r\n\r\n        // Add Theme Section3\r\n        section_third[0].classList.add(`theme${this.themeArr[2]}`);\r\n        //\r\n\r\n\r\n        this.setState({\r\n            ThemeArrCurrent: this.themeArr,\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ float: \"right\" }}>\r\n                <a href=\"#\" onClick={() => { this.ThemChanger() }}><i class=\"material-icons\">brush</i></a>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Theme;","import React, { Component } from 'react';\r\nimport { Link } from 'react-scroll';\r\nimport Theme from '../Components/Theme';\r\nimport \"../Css/NavBar.css\";\r\n\r\nclass NavBar extends Component {\r\n    render() {\r\n        return (\r\n            <div class=\"navbar\">\r\n                <a href=\"#\">\r\n                    <Link activeClass=\"active\" to=\"title\" spy={true} smooth={true} offset={0} duration={500} onSetActive={this.handleSetActive}>YASER !</Link>\r\n                </a>\r\n                <a href=\"#\">\r\n                    <Link activeClass=\"active\" to=\"about\" spy={true} smooth={true} offset={0} duration={500} onSetActive={this.handleSetActive}>About</Link>\r\n                </a>\r\n                <a href=\"#\">\r\n                    <Link activeClass=\"active\" to=\"skills\" spy={true} smooth={true} offset={0} duration={500} onSetActive={this.handleSetActive}>Skills</Link>\r\n                </a>\r\n                \r\n                <Theme />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport { Link } from 'react-scroll'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport \"../Css/ArrowDropDownUp.css\";\r\n\r\n\r\n\r\nclass ArrowDropDownUp extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"arrowDropDownUp\">\r\n                <Link activeClass=\"active\" to={this.props.to} spy={true} smooth={true} offset={0} duration={500} onSetActive={this.handleSetActive}>\r\n                    <i class=\"material-icons\" style={{ fontSize: \"45pt\" }}>{this.props.icon}</i>\r\n                </Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ArrowDropDownUp;\r\n\r\nArrowDropDownUp.propTypes = {\r\n    className: PropTypes.string,\r\n    to: PropTypes.string,\r\n    icon: PropTypes.string\r\n}\r\n\r\nArrowDropDownUp.defaultProps = {\r\n    icon: \"arrow_drop_down\"\r\n}","import React, { Component } from 'react';\r\nimport { Element } from 'react-scroll'\r\nimport ArrowDropDownUp from \"../Components/ArrowDropDownUp\";\r\n\r\n\r\nclass Section extends Component {\r\n    render() {\r\n        const props = this.props;\r\n\r\n        return (\r\n\r\n            <Element name={props.elementName} className=\"element\">\r\n                <div className={`Section  ${props.className || ''}`} >\r\n\r\n                    {props.children}\r\n\r\n                    <ArrowDropDownUp to={props.elementTo} icon={props.icon} />\r\n                </div>\r\n            </Element>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Section;","import React, { Component } from 'react';\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport Section from \"../Sections/Section\";\r\n\r\nimport data from \"../Data/data.json\"\r\n\r\nimport '../Css/TitleSection.css'\r\n\r\nclass AboutSection extends Component {\r\n    render() {\r\n        return (\r\n            <Section className='Section-first' elementName='title' elementTo='about' >\r\n                <h1>{data.title}</h1>\r\n                <h2>{data.subtitle}</h2>\r\n\r\n                <div>\r\n                    {\r\n                        Object.keys(data.links).map(key => {\r\n                            return (\r\n                                <SocialIcon className=\"icon\" url={data.links[key]} />\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n\r\n            </Section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AboutSection;","import React, { Component } from 'react';\r\nimport Section from \"../Sections/Section\";\r\n\r\nimport data from \"../Data/data.json\"\r\n\r\nimport '../Css/AboutSection.css'\r\n\r\nclass AboutSection extends Component {\r\n    render() {\r\n        return (\r\n            <Section className='Section-second' elementName='about' elementTo='skills' >\r\n                <h2>{data.Sections[0].title}</h2>\r\n                <p>{data.Sections[0].item[0].content}</p>\r\n\r\n                <h3><em>{data.Sections[0].subtitle}</em>  <i class=\"material-icons\">mood</i></h3>\r\n            </Section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AboutSection;","import React, { Component } from 'react';\r\nimport Section from \"../Sections/Section\";\r\n\r\nimport data from \"../Data/data.json\"\r\n\r\nimport '../Css/SkillsSection.css'\r\n\r\n\r\nclass AboutSection extends Component {\r\n    render() {\r\n        return (\r\n            <Section className='Section-third' elementName='skills' elementTo='title' icon='arrow_drop_up'>\r\n                <h2>{data.Sections[1].title}</h2>\r\n                <div className=\"card-container\">\r\n                    {\r\n                        Object.keys(data.Sections[1].item).map(key => {\r\n                            return (\r\n\r\n                                <div className=\"card\">\r\n                                    <img src={data.Sections[1].item[key].content.image} alt={data.Sections[1].item[key].content.title}\r\n                                        className=\"card-image\" />\r\n                                    <div className=\"card-title\">\r\n                                        <h4>{data.Sections[1].item[key].content.title}</h4>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                </div>\r\n            </Section>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AboutSection;","import React, { Component } from 'react';\nimport SnowStorm from 'react-snowstorm';\n\nimport NavBar from './Components/NavBar'\nimport TitleSection from './Sections/TitleSection'\nimport AboutSection from './Sections/AboutSection'\nimport SkillsSection from './Sections/SkillsSection'\n\nimport './Css/App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <div>\n          <SnowStorm />\n        </div>\n        \n        <NavBar />\n\n        <div className=\"App\" >\n\n          <TitleSection />\n          <AboutSection />\n          <SkillsSection />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}